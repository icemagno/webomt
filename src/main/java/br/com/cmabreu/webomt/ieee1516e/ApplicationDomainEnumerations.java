//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.10.06 at 09:06:12 AM BRT 
//


package br.com.cmabreu.webomt.ieee1516e;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for ApplicationDomainEnumerations.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="ApplicationDomainEnumerations">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="Analysis"/>
 *     &lt;enumeration value="Training"/>
 *     &lt;enumeration value="Test and Evaluation"/>
 *     &lt;enumeration value="Engineering"/>
 *     &lt;enumeration value="Acquisition"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "ApplicationDomainEnumerations")
@XmlEnum
public enum ApplicationDomainEnumerations {

    @XmlEnumValue("Analysis")
    ANALYSIS("Analysis"),
    @XmlEnumValue("Training")
    TRAINING("Training"),
    @XmlEnumValue("Test and Evaluation")
    TEST_AND_EVALUATION("Test and Evaluation"),
    @XmlEnumValue("Engineering")
    ENGINEERING("Engineering"),
    @XmlEnumValue("Acquisition")
    ACQUISITION("Acquisition");
    private final java.lang.String value;

    ApplicationDomainEnumerations(java.lang.String v) {
        value = v;
    }

    public java.lang.String value() {
        return value;
    }

    public static ApplicationDomainEnumerations fromValue(java.lang.String v) {
        for (ApplicationDomainEnumerations c: ApplicationDomainEnumerations.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
